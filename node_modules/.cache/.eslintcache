[{"E:\\DATN\\datn_WebQuanTri\\src\\index.js":"1","E:\\DATN\\datn_WebQuanTri\\src\\App.js":"2","E:\\DATN\\datn_WebQuanTri\\src\\reportWebVitals.js":"3","E:\\DATN\\datn_WebQuanTri\\src\\component\\Navigation\\Nav.js":"4","E:\\DATN\\datn_WebQuanTri\\src\\component\\Login\\Login.js":"5","E:\\DATN\\datn_WebQuanTri\\src\\component\\Register\\Register.js":"6","E:\\DATN\\datn_WebQuanTri\\src\\services\\userServices.js":"7","E:\\DATN\\datn_WebQuanTri\\src\\component\\ManageUsers\\Users.js":"8","E:\\DATN\\datn_WebQuanTri\\src\\routes\\AppRoutes.js":"9","E:\\DATN\\datn_WebQuanTri\\src\\routes\\PrivateRoutes.js":"10"},{"size":540,"mtime":1693998117037,"results":"11","hashOfConfig":"12"},{"size":1052,"mtime":1695533480281,"results":"13","hashOfConfig":"12"},{"size":375,"mtime":1693991347806,"results":"14","hashOfConfig":"12"},{"size":869,"mtime":1699886721146,"results":"15","hashOfConfig":"12"},{"size":4638,"mtime":1695917587635,"results":"16","hashOfConfig":"12"},{"size":8009,"mtime":1694182964132,"results":"17","hashOfConfig":"12"},{"size":584,"mtime":1700060457080,"results":"18","hashOfConfig":"12"},{"size":4984,"mtime":1700062028517,"results":"19","hashOfConfig":"12"},{"size":1271,"mtime":1699888012131,"results":"20","hashOfConfig":"12"},{"size":565,"mtime":1695917512866,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1o4ii9i",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"24"},"E:\\DATN\\datn_WebQuanTri\\src\\index.js",[],["48","49"],"E:\\DATN\\datn_WebQuanTri\\src\\App.js",["50"],"import './App.scss';\r\nimport Nav from './component/Navigation/Nav';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {BrowserRouter as Router,} from \"react-router-dom\";\r\nimport AppRoutes from './routes/AppRoutes';\r\n\r\nfunction App() {\r\n  const [account, setaccount] = useState({});\r\n\r\n  useEffect(() => {\r\n    let session = sessionStorage.getItem(\"account\");\r\n    if (session) {\r\n      setaccount(JSON.parse(session));\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <Router>\r\n      <div className='app-header'>\r\n        <Nav />\r\n      </div>\r\n\r\n      <div className='app-container'>\r\n       <AppRoutes/>\r\n      </div>\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        theme=\"light\"\r\n      />\r\n\r\n\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","E:\\DATN\\datn_WebQuanTri\\src\\reportWebVitals.js",[],"E:\\DATN\\datn_WebQuanTri\\src\\component\\Navigation\\Nav.js",["51","52","53"],"import React, { useEffect, useState } from 'react';\r\nimport './Nav.scss';\r\nimport { NavLink, useLocation } from 'react-router-dom';\r\nconst Nav = (props) => {\r\n    const [isShow, setIsShow] = useState(true)\r\n    let location = useLocation();\r\n    useEffect(() => {\r\n        if (location.pathname == '/login') {\r\n            setIsShow(false)\r\n        }\r\n    },[])\r\n\r\n\r\n    return (\r\n        <>\r\n       {isShow == true &&  \r\n            <div className=\"topnav\"> \r\n            <NavLink  to='/' exact>HOME</NavLink>\r\n            <NavLink to='/users'>Users</NavLink>\r\n            <NavLink  to='/products'>Products</NavLink>\r\n            <NavLink  to='/category'>Category</NavLink>\r\n            <NavLink  to='/member'>Member</NavLink>\r\n            <NavLink  to='/news'>News</NavLink>\r\n        </div>\r\n       } \r\n       \r\n        </>\r\n        \r\n    );\r\n}\r\n\r\nexport default Nav;","E:\\DATN\\datn_WebQuanTri\\src\\component\\Login\\Login.js",["54","55","56","57"],"import { useEffect, useState } from 'react';\r\nimport './Login.scss';\r\nimport { toast } from 'react-toastify';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { LoginUser } from '../../services/userServices';\r\nconst Login = (props) => {\r\n    let history = useHistory();\r\n\r\n    const [ValueLogin, setValueLogin] = useState(\"\");\r\n    const [password, setpassword] = useState(\"\");\r\n\r\n    const defaultObjvalueInput = {\r\n        isvalidValueLogin: true,\r\n        isvalidVluePassword: true,\r\n\r\n    }\r\n    const [objValueInput, setObjvalueInput] = useState(defaultObjvalueInput)\r\n\r\n\r\n    const handleCreateNewAccount = () => {\r\n        history.push('/register');\r\n    }\r\n    const handleLogin = async() => {\r\n        setObjvalueInput(defaultObjvalueInput);\r\n\r\n        if(!ValueLogin){\r\n            setObjvalueInput({...defaultObjvalueInput, isvalidValueLogin: false});\r\n            toast.error(\"Please enter your email or phone number\")\r\n            return;\r\n        }\r\n        if(!password){\r\n            setObjvalueInput({...defaultObjvalueInput, isvalidVluePassword: false});\r\n            toast.error(\"Please enter your password\")\r\n            return;\r\n        }\r\n    let respone =  await LoginUser(ValueLogin,password);\r\n    if(respone && respone.data && +respone.data.EC === 0){\r\n        // success\r\n        let data = {\r\n            isAuthenticated: true,\r\n            token: 'fake token'\r\n        }\r\n        sessionStorage.setItem(\"account\", JSON.stringify(data));\r\n        history.push('/users')\r\n        window.location.reload();\r\n    }\r\n    if(respone && respone.data && +respone.data.EC !== 0){\r\n        // error\r\n        toast.error(respone.data.EM)\r\n    }\r\n      \r\n    }\r\n    const handlePressEnter = (event) => {\r\n     if(event.charCode == 13 && event.code == \"Enter\"){\r\n        handleLogin();\r\n     }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let session = sessionStorage.getItem(\"account\");\r\n        if (session) {\r\n            history.push(\"/\")\r\n            window.location.reload();\r\n        }\r\n    },[])\r\n    return (\r\n        <div className=\"login-container\">\r\n            <div className=\"container\">\r\n                <div className=\"row px-3 px-sm-0\">\r\n                    <div className=\"content-left col-12 d-none col-sm-7 d-sm-block \">\r\n                        <div className='brand'>\r\n                            Thế Nguyện\r\n                        </div>\r\n                        <div className='detail'>\r\n                            Người Đẹp Trai Nhất Thế Giới Chỉ Có Một Trên Đời Thôi Nhé Anh Em Ơi.............\r\n                        </div>\r\n                    </div>\r\n                    \r\n                        <div className=\"content-right col-sm-5 col-12 d-flex flex-column gap-3 py-3\">\r\n                        <div className='brand d-sm-none'>\r\n                            Thế Nguyện\r\n                        </div>\r\n                            <input type='text'\r\n                             className= {objValueInput.isvalidValueLogin ? 'form-control' : 'is-invalid form-control'}\r\n                             placeholder='Email address or phone number' \r\n                            value={ValueLogin}\r\n                            onChange={(event) => {setValueLogin(event.target.value)}}\r\n                            />\r\n                            <input type='password' \r\n                            className={objValueInput.isvalidVluePassword ? 'form-control' : 'is-invalid form-control'} \r\n                            placeholder='Password' \r\n                            value={password}\r\n                            onChange={(event) => {setpassword(event.target.value)}}\r\n                            onKeyPress ={(event)=> handlePressEnter(event)}\r\n                            />\r\n                            <button className='btn btn-primary' onClick={() => handleLogin()}>Login</button>\r\n                            <span className='text-center'>\r\n                                <a className='forgot-password' href='#'>\r\n                                    Fogot your password ?\r\n                                </a>\r\n                            </span>\r\n                            <hr />\r\n                            <div className='text-center'>\r\n                                <button className='btn btn-success' onClick={() => handleCreateNewAccount()}>\r\n                                     Create new account\r\n                                    </button>\r\n                            </div>\r\n\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Login;","E:\\DATN\\datn_WebQuanTri\\src\\component\\Register\\Register.js",["58","59","60"],"import { useEffect, useState } from 'react';\r\nimport './Register.scss';\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from 'react-toastify';\r\nimport { registerNewUser } from '../../services/userServices';\r\n\r\nconst Register = (props) => {\r\n    const [firtsname, setfirtsname] = useState('');\r\n    const [lastname, setlastname] = useState('');\r\n    const [email, setemail] = useState('');\r\n    const [phone, setphone] = useState('');\r\n    const [address, setaddress] = useState('');\r\n    const [password, setpassword] = useState('');\r\n    const [confirmPassword, setconfirmPassword] = useState('');\r\n    const defaultValidInput = {\r\n        isValidFirstname: true,\r\n        isValidLastname: true,\r\n        isValidEmail: true,\r\n        isValidPhone: true,\r\n        isValidAddress: true,\r\n        isValidPassword: true,\r\n        isValidConfirmPassword: true,\r\n    }\r\n    const [ObjcheckValid, setObjcheckValid] = useState(defaultValidInput);\r\n    \r\n    let history = useHistory();\r\n    const handleLogin = () => {\r\n        history.push('/login');\r\n    }\r\n    const handleRegister = async() => {\r\n        let check  = isValidInput();\r\n        if(check == true){\r\n        let response = await registerNewUser(firtsname,lastname,email,password,phone,address);\r\n          let serverData = response.data;\r\n          if(+serverData.EC==0){\r\n            toast.success(serverData.EM);\r\n            history.push('/login');\r\n          }else{\r\n            toast.error(serverData.EM)\r\n          }\r\n        }\r\n        \r\n    }\r\n    useEffect(() => {\r\n        // axios.get('http://localhost:8000/api/v1/test-api').then(data => {\r\n        //     console.log(\"data>>>>>>>>..\",data)\r\n           \r\n\r\n    }, []);\r\n    const isValidInput = () => {\r\n        setObjcheckValid(defaultValidInput)\r\n        if (!firtsname) {\r\n            toast.error(\"First Name cannot be blank !\");\r\n            setObjcheckValid({...defaultValidInput, isValidFirstname: false});\r\n            return false;\r\n        }\r\n        if (!lastname) {\r\n            toast.error(\"Last Name cannot be blank !\");\r\n            setObjcheckValid({...defaultValidInput, isValidLastname: false});\r\n            return false;\r\n        }\r\n        if (!email) {\r\n            toast.error(\"Email cannot be blank !\");\r\n            setObjcheckValid({...defaultValidInput, isValidEmail: false});\r\n            return false;\r\n        }\r\n        let regx = /\\S+@\\S+\\.\\S+/;\r\n        if(!regx.test(email)){\r\n            toast.error(\"Email enter valid addresss !\");\r\n            setObjcheckValid({...defaultValidInput, isValidEmail: false});\r\n            return false;\r\n        }\r\n        if (!phone) {\r\n            toast.error(\"PhoneNumber cannot be blank !\");\r\n            setObjcheckValid({...defaultValidInput, isValidPhone: false});\r\n            return false;\r\n        }\r\n        if (!address) {\r\n            toast.error(\"Address cannot be blank !\");\r\n            setObjcheckValid({...defaultValidInput, isValidAddress: false});\r\n            return false;\r\n        }\r\n        if (!password) {\r\n            toast.error(\"Password cannot be blank !\");\r\n            setObjcheckValid({...defaultValidInput, isValidPassword: false});\r\n            return false;\r\n        }\r\n        if (password !== confirmPassword) {\r\n            toast.error(\"Your Password is not same !\");\r\n            setObjcheckValid({...defaultValidInput, isValidConfirmPassword: false});\r\n            return false;\r\n        }\r\n        \r\n        return true;\r\n    }\r\n    return (\r\n        <div className=\"login-container\">\r\n            <div className=\"container\">\r\n                <div className=\"row px-3 px-sm-0\">\r\n                    <div className=\"content-left col-12 d-none col-sm-7 d-sm-block \">\r\n                        <div className='brand'>\r\n                            Đăng Ký\r\n                        </div>\r\n                        <div className='detail'>\r\n                            Đăng Ký để trở thành những đàn em của Thế Nguyện cùng nhau kề vai sát cánh trong tương lai ........\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"content-right col-sm-5 col-12 d-flex flex-column gap-3 py-3\">\r\n                        <div className='brand d-sm-none'>\r\n                            Thế Nguyện\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label>First Name :</label>\r\n                            <input className={ObjcheckValid.isValidFirstname ? 'form-control' : 'form-control is-invalid' } type='text'  placeholder='First Name'\r\n                                value={firtsname} onChange={(event) => setfirtsname(event.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label>Last Name :</label>\r\n                            <input type='text' className={ObjcheckValid.isValidLastname ? 'form-control' : 'form-control is-invalid' } placeholder='Last Name'\r\n                                value={lastname} onChange={(event) => setlastname(event.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label> Email :</label>\r\n                            <input type='email' className={ObjcheckValid.isValidEmail ? 'form-control' : 'form-control is-invalid' } placeholder='Email address'\r\n                                value={email} onChange={(event) => setemail(event.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label> PhoneNumber :</label>\r\n                            <input type='number' className={ObjcheckValid.isValidPhone ? 'form-control' : 'form-control is-invalid' } placeholder='PhoneNumber'\r\n                                value={phone} onChange={(event) => setphone(event.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label> Address :</label>\r\n                            <input type='text' className={ObjcheckValid.isValidAddress ? 'form-control' : 'form-control is-invalid' } placeholder='Address'\r\n                                value={address} onChange={(event) => setaddress(event.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label> Password :</label>\r\n                            <input type='password' className={ObjcheckValid.isValidPassword ? 'form-control' : 'form-control is-invalid' } placeholder='Password'\r\n                                value={password} onChange={(event) => setpassword(event.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label> RePassword :</label>\r\n                            <input type='password' className={ObjcheckValid.isValidConfirmPassword ? 'form-control' : 'form-control is-invalid' } placeholder='RePassWord'\r\n                                value={confirmPassword} onChange={(event) => setconfirmPassword(event.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <button className='btn btn-primary' onClick={() => handleRegister()}>Register</button>\r\n                        <hr />\r\n                        <div className='text-center'>\r\n                            <button className='btn btn-success' onClick={() => handleLogin()}>\r\n                                Already've an account? Login\r\n                            </button>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Register;","E:\\DATN\\datn_WebQuanTri\\src\\services\\userServices.js",[],"E:\\DATN\\datn_WebQuanTri\\src\\component\\ManageUsers\\Users.js",["61","62"],"E:\\DATN\\datn_WebQuanTri\\src\\routes\\AppRoutes.js",[],"E:\\DATN\\datn_WebQuanTri\\src\\routes\\PrivateRoutes.js",["63"],"import { useEffect } from \"react\";\r\nimport {\r\n    Route\r\n  } from \"react-router-dom\";\r\n  import { useHistory } from \"react-router-dom\";\r\n\r\n   \r\nconst PrivateRoutes = (props) => {\r\n     let history = useHistory();\r\n    useEffect(() => {\r\n        let session = sessionStorage.getItem(\"account\");\r\n        if (!session) {\r\n            history.push(\"/login\")\r\n            window.location.reload();\r\n        }\r\n    },[]);\r\n\r\n    return(\r\n        <>\r\n        <Route path={props.path} component = {props.component}/>\r\n        </>\r\n    )\r\n\r\n}\r\nexport default PrivateRoutes;",{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":10,"column":10,"nodeType":"70","messageId":"71","endLine":10,"endColumn":17},{"ruleId":"72","severity":1,"message":"73","line":8,"column":31,"nodeType":"74","messageId":"75","endLine":8,"endColumn":33},{"ruleId":"76","severity":1,"message":"77","line":11,"column":7,"nodeType":"78","endLine":11,"endColumn":9,"suggestions":"79"},{"ruleId":"72","severity":1,"message":"73","line":16,"column":16,"nodeType":"74","messageId":"75","endLine":16,"endColumn":18},{"ruleId":"72","severity":1,"message":"73","line":54,"column":24,"nodeType":"74","messageId":"75","endLine":54,"endColumn":26},{"ruleId":"72","severity":1,"message":"73","line":54,"column":44,"nodeType":"74","messageId":"75","endLine":54,"endColumn":46},{"ruleId":"76","severity":1,"message":"80","line":65,"column":7,"nodeType":"78","endLine":65,"endColumn":9,"suggestions":"81"},{"ruleId":"82","severity":1,"message":"83","line":98,"column":33,"nodeType":"84","endLine":98,"endColumn":73},{"ruleId":"68","severity":1,"message":"85","line":3,"column":8,"nodeType":"70","messageId":"71","endLine":3,"endColumn":13},{"ruleId":"72","severity":1,"message":"73","line":33,"column":18,"nodeType":"74","messageId":"75","endLine":33,"endColumn":20},{"ruleId":"72","severity":1,"message":"73","line":36,"column":28,"nodeType":"74","messageId":"75","endLine":36,"endColumn":30},{"ruleId":"68","severity":1,"message":"86","line":7,"column":26,"nodeType":"70","messageId":"71","endLine":7,"endColumn":41},{"ruleId":"76","severity":1,"message":"87","line":11,"column":8,"nodeType":"78","endLine":11,"endColumn":21,"suggestions":"88"},{"ruleId":"76","severity":1,"message":"80","line":16,"column":7,"nodeType":"78","endLine":16,"endColumn":9,"suggestions":"89"},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'account' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'location.pathname'. Either include it or remove the dependency array.","ArrayExpression",["92"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["93"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'axios' is defined but never used.","'setCurrentLimit' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchUsers'. Either include it or remove the dependency array.",["94"],["95"],"no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},{"desc":"98","fix":"102"},"Update the dependencies array to be: [location.pathname]",{"range":"103","text":"104"},"Update the dependencies array to be: [history]",{"range":"105","text":"106"},"Update the dependencies array to be: [currentPage, fetchUsers]",{"range":"107","text":"108"},{"range":"109","text":"106"},[358,360],"[location.pathname]",[2019,2021],"[history]",[454,467],"[currentPage, fetchUsers]",[412,414]]